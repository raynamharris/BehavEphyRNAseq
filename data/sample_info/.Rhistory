for(i in 1:10){
print("Hello world!")
print(i*i)
}
for(i in 1:100){
print("Hello world!")
print(i*i)
}
for(pancake in 1:100){
print("Hello world!")
print(pancake*pancake)
}
for(number in 1:100){
print("Hello world!")
print(number*number)
}
library(ggplot2)
install.packages("ggplot2")
install.packages("lme4")
library(ggplot2)
library(lme4)
sampleAnnotation = data.frame(
row.names = 1:12,
source_id = factor(as.character(c(1:3, rep(4, 3), 7:9, rep(10, 3))))
)
View(sampleAnnotation)
simMean = function(n, min=0, max=10) {runif(n, min, max)}
simBioSd = function(n, scaleSd=0.5, width=0.2) {
return(scaleSd * exp(width*rnorm(n)))
}
simTechSd = function(mu, low=0.25, high=0.1, scale=2.5) {
return(high + (low-high) * exp(-mu / scale))
}
simData = function(
sampleAnnot = sampleAnnotation,
nGenes = 1000) {
nSamples = nrow(sampleAnnot)
sources = unique(sampleAnnot$source_id)
## simulate underlying biological signal
srcData = data.frame(matrix(
rnorm(length(sources) * nGenes),
nrow = nGenes,
ncol = length(sources)
))
srcData = sweep(
x = srcData,
MARGIN = 1,
STATS = simBioSd(nGenes),
FUN = `*`
)
srcData = sweep(
x = srcData,
MARGIN = 1,
STATS = simMean(nGenes),
FUN = `+`
)
colnames(srcData) = as.character(sources)
## add in technical variance
out = srcData[ , as.character(sampleAnnot$source_id)]
techSds = simTechSd(mu=apply(srcData, 1, mean))
for (i in 1:ncol(out)) {
out[ , i] = out[ , i] + techSds * rnorm(nGenes)
}
return(out)
}
x = simData()
precModels = apply(
X = as.matrix(x),
MARGIN = 1,
FUN = function(z) {lmer(z ~ 1|sampleAnnotation$source_id)}
)
geneMeans = apply(x, 1, mean)
## extract estimates from lmer output objects
techSds = sapply(precModels, sigma)
bioSds = sapply(precModels, function(m) {sqrt(unlist(lme4::VarCorr(m)))})
plotData = data.frame(
mean = geneMeans,
technical_sd = techSds,
biological_sd = bioSds
)
ggobj = ggplot(plotData, aes(x=mean, y=technical_sd))
ggobj = ggobj + geom_point(alpha=0.5)
ggobj = ggobj + theme_classic()
ggobj = ggobj + stat_smooth(degree=1)
print(ggobj)
View(plotData)
View(sampleAnnotation)
View(x)
View(sampleAnnotation)
View(x)
View(sampleAnnotation)
View(x)
source("http://bioconductor.org/biocLite.R")
install.packages("RcppArmadillo", type="source")
2+2
setwd("~/Desktop/diseaseScript_Final//wgcna")
setwd("~/Github/BehavEphyRNAseq/data/sample_info")
punches <- read.csv("punches.csv", header=TRUE, sep="," )
animals <- read.csv("animals.csv", header=TRUE, sep="," )
str(punches)
str(animals)
str(punches$Mouse)
str(animals$Mouse)
## 2. clean data & join
cleanpunches <- punches
cleanpunches$Date <- as.Date(cleanpunches$Date, "%m/%d/%y")
cleanpunches$year <- as.factor(cleanpunches$year)
cleanpunches$year <- as.factor(cleanpunches$year)
cleanpunches$RNAisolationdate <- as.Date(cleanpunches$RNAisolationdate, "%m/%d/%y")
cleanpunches$Punchsize <- as.factor(cleanpunches$Punchsize)
cleanpunches$Tube <- as.character(cleanpunches$Tube)
cleanpunches$ready.time <-  strftime(cleanpunches$ready.time,"%H:%M")
cleanpunches$year <-  as.character(cleanpunches$year)
str(cleanpunches)
cleanpunches <- cleanpunches %>%
left_join(animals, by="Mouse")
library(dplyr)
NSBpunches <- cleanpunches %>%
filter(Purpose == "students", Punch != "CA1?") %>%
select(Tube, Mouse, Slice, Punch, photos, Date,
ready.time, start.time, Slice.collector,
punch.location, slice.location, storagebox, notes.x,
Strain, Conflict, APA, Paradigm, behavior, Purpose)
str(NSBpunches)
library(dplyr)
setwd("~/Github/BehavEphyRNAseq/data/sample_info")
punches <- read.csv("punches.csv", header=TRUE, sep="," )
animals <- read.csv("animals.csv", header=TRUE, sep="," )
str(punches)
str(animals)
str(punches$Mouse)
str(animals$Mouse)
## 2. clean data & join
cleanpunches <- punches
cleanpunches$Date <- as.Date(cleanpunches$Date, "%m/%d/%y")
cleanpunches$year <- as.factor(cleanpunches$year)
cleanpunches$year <- as.factor(cleanpunches$year)
cleanpunches$RNAisolationdate <- as.Date(cleanpunches$RNAisolationdate, "%m/%d/%y")
cleanpunches$Punchsize <- as.factor(cleanpunches$Punchsize)
cleanpunches$Tube <- as.character(cleanpunches$Tube)
cleanpunches$ready.time <-  strftime(cleanpunches$ready.time,"%H:%M")
cleanpunches$year <-  as.character(cleanpunches$year)
str(cleanpunches)
cleanpunches <- cleanpunches %>%
left_join(animals, by="Mouse")
## 3. Wrangle for students
NSBpunches <- cleanpunches %>%
filter(Purpose == "students", Punch != "CA1?") %>%
select(Tube, Mouse, Slice, Punch, photos, Date,
ready.time, start.time, Slice.collector,
punch.location, slice.location, storagebox, notes.x,
Strain, Conflict, APA, Paradigm, behavior, Purpose)
str(NSBpunches)
NSBpunchesMouse <- NSBpunches %>%
filter(Date < "2016-07-28", Punch != "slice") %>%
distinct(Mouse, Date, Paradigm, behavior, Purpose)
NSBpunchesSlice <- NSBpunches %>%
filter(Punch == "slice") %>%
distinct(Mouse, Punch, Date, Paradigm, behavior, storagebox)
NSBpunchesCA1 <- NSBpunches %>%
filter(Punch == "CA1") %>%
distinct(Mouse, Punch, Date, Paradigm, behavior, storagebox)
NSBpunchesCA2 <- NSBpunches %>%
filter(Punch == "CA2") %>%
distinct(Mouse, Punch, Date, Paradigm, behavior, storagebox)
NSBpunchesCA3 <- NSBpunches %>%
filter(Punch == "CA3") %>%
distinct(Mouse, Punch, Date, Paradigm, behavior, storagebox)
NSBpunchesCA4 <- NSBpunches %>%
filter(Punch == "CA4") %>%
distinct(Mouse, Punch, Date, Paradigm, behavior, storagebox)
NSBpunchesDG <- NSBpunches %>%
filter(Punch == "DG") %>%
distinct(Mouse, Punch, Date, Paradigm, behavior, storagebox)
View(NSBpunchesCA1)
View(NSBpunchesCA2)
View(NSBpunchesCA1)
View(NSBpunchesCA3)
